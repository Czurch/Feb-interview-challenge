{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\src\\\\components\\\\list-card\\\\ListCard.js\";\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { Card as Base, CardHeader, CardContent } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ListCard.module.scss\";\n\nvar ListCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListCard, _Component);\n\n  function ListCard() {\n    _classCallCheck(this, ListCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListCard).apply(this, arguments));\n  }\n\n  _createClass(ListCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          cardHeader = _this$props.cardHeader,\n          cardItems = _this$props.cardItems;\n\n      var themeCheck = function themeCheck(style) {\n        return classNames(style, _defineProperty({}, styles.dark, theme === \"dark\"));\n      };\n\n      return React.createElement(Base, {\n        classes: {\n          root: classNames(styles.listCard, _defineProperty({}, styles.dark, theme === \"dark\"))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        title: cardHeader,\n        classes: {\n          root: classNames(styles.headerSpace, _defineProperty({}, styles.dark, theme === \"dark\")),\n          title: classNames(styles.headerTitle, _defineProperty({}, styles.dark, theme === \"dark\"))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        classes: {\n          root: classNames(styles.itemSpace, _defineProperty({}, styles.dark, theme === \"dark\"))\n        },\n        component: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, cardItems.map(function (item) {\n        return React.createElement(\"li\", {\n          className: styles.listItem,\n          key: item.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"- \", item);\n      })));\n    }\n  }]);\n\n  return ListCard;\n}(Component);\n\nListCard.propTypes = {\n  cardHeader: PropTypes.string,\n  cardItems: PropTypes.arrayOf(PropTypes.string)\n};\nListCard.defaultProps = {};\nexport default ListCard;","map":{"version":3,"sources":["C:\\Users\\lukes\\Desktop\\FrontendMasters\\Feb-interview-challenge\\src\\components\\list-card\\ListCard.js"],"names":["React","Component","classNames","Card","Base","CardHeader","CardContent","PropTypes","styles","ListCard","props","theme","cardHeader","cardItems","themeCheck","style","dark","root","listCard","headerSpace","title","headerTitle","itemSpace","map","item","listItem","key","propTypes","string","arrayOf","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAI,IAAIC,IAAjB,EAAuBC,UAAvB,EAAmCC,WAAnC,QAAsD,mBAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;IAEMC,Q;;;;;;;;;;;;;6BACK;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,UADR,eACQA,UADR;AAAA,UACoBC,SADpB,eACoBA,SADpB;;AAGP,UAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,eACtBb,UAAU,CAACa,KAAD,sBAAWP,MAAM,CAACQ,IAAlB,EAAyBL,KAAK,KAAK,MAAnC,EADY;AAAA,OAAxB;;AAGA,aACE,oBAAC,IAAD;AACE,QAAA,OAAO,EAAE;AACPM,UAAAA,IAAI,EAAEf,UAAU,CAACM,MAAM,CAACU,QAAR,sBAAqBV,MAAM,CAACQ,IAA5B,EAAmCL,KAAK,KAAK,MAA7C;AADT,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAEC,UADT;AAEE,QAAA,OAAO,EAAE;AACPK,UAAAA,IAAI,EAAEf,UAAU,CAACM,MAAM,CAACW,WAAR,sBACbX,MAAM,CAACQ,IADM,EACCL,KAAK,KAAK,MADX,EADT;AAIPS,UAAAA,KAAK,EAAElB,UAAU,CAACM,MAAM,CAACa,WAAR,sBACdb,MAAM,CAACQ,IADO,EACAL,KAAK,KAAK,MADV;AAJV,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAgBE,oBAAC,WAAD;AACE,QAAA,OAAO,EAAE;AACPM,UAAAA,IAAI,EAAEf,UAAU,CAACM,MAAM,CAACc,SAAR,sBACbd,MAAM,CAACQ,IADM,EACCL,KAAK,KAAK,MADX;AADT,SADX;AAME,QAAA,SAAS,EAAC,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQGE,SAAS,CAACU,GAAV,CAAc,UAAAC,IAAI;AAAA,eACjB;AAAI,UAAA,SAAS,EAAEhB,MAAM,CAACiB,QAAtB;AAAgC,UAAA,GAAG,EAAED,IAAI,CAACE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACKF,IADL,CADiB;AAAA,OAAlB,CARH,CAhBF,CADF;AAiCD;;;;EAxCoBvB,S;;AA2CvBQ,QAAQ,CAACkB,SAAT,GAAqB;AACnBf,EAAAA,UAAU,EAAEL,SAAS,CAACqB,MADH;AAEnBf,EAAAA,SAAS,EAAEN,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACqB,MAA5B;AAFQ,CAArB;AAKAnB,QAAQ,CAACqB,YAAT,GAAwB,EAAxB;AAEA,eAAerB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { Card as Base, CardHeader, CardContent } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ListCard.module.scss\";\n\nclass ListCard extends Component {\n  render() {\n    const { theme, cardHeader, cardItems } = this.props;\n\n    const themeCheck = style =>\n      classNames(style, { [styles.dark]: theme === \"dark\" });\n\n    return (\n      <Base\n        classes={{\n          root: classNames(styles.listCard, { [styles.dark]: theme === \"dark\" })\n        }}\n      >\n        <CardHeader\n          title={cardHeader}\n          classes={{\n            root: classNames(styles.headerSpace, {\n              [styles.dark]: theme === \"dark\"\n            }),\n            title: classNames(styles.headerTitle, {\n              [styles.dark]: theme === \"dark\"\n            })\n          }}\n        />\n        <CardContent\n          classes={{\n            root: classNames(styles.itemSpace, {\n              [styles.dark]: theme === \"dark\"\n            })\n          }}\n          component=\"ul\"\n        >\n          {cardItems.map(item => (\n            <li className={styles.listItem} key={item.key}>\n              - {item}\n            </li>\n          ))}\n        </CardContent>\n      </Base>\n    );\n  }\n}\n\nListCard.propTypes = {\n  cardHeader: PropTypes.string,\n  cardItems: PropTypes.arrayOf(PropTypes.string)\n};\n\nListCard.defaultProps = {};\n\nexport default ListCard;\n"]},"metadata":{},"sourceType":"module"}