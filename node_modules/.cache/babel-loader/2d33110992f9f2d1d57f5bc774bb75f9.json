{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\src\\\\components\\\\list-card\\\\ListCard.js\";\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { Card as Base, CardHeader, CardContent } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ListCard.module.scss\";\n\nvar ListCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListCard, _Component);\n\n  function ListCard() {\n    _classCallCheck(this, ListCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListCard).apply(this, arguments));\n  }\n\n  _createClass(ListCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          cardHeader = _this$props.cardHeader,\n          cardItems = _this$props.cardItems;\n\n      switch (theme) {\n        case \"stop\":\n          themeObj.class = \"red\";\n          themeObj.variant = \"underlined\";\n          themeObj.size = \"large\";\n          break;\n\n        case \"go\":\n          themeObj.class = \"green\";\n          themeObj.variant = \"raised\";\n          themeObj.size = \"medium\";\n          break;\n\n        case \"yield\":\n          themeObj.class = \"yellow\";\n          themeObj.variant = \"flat\";\n          themeObj.size = \"small\";\n          break;\n\n        default:\n          themeObj.class = \"default\";\n      }\n\n      var classes = classNames(\"ui-button\", className, _defineProperty({}, themeObj.class, [theme]));\n      return React.createElement(Base, {\n        classes: {\n          root: styles.theme\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        classes: {\n          root: styles.headerSpace\n        },\n        title: cardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        classes: {\n          root: styles.itemSpace\n        },\n        component: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, cardItems.map(function (item) {\n        return React.createElement(\"li\", {\n          className: styles.listItem,\n          key: item.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"-\", item);\n      })));\n    }\n  }]);\n\n  return ListCard;\n}(Component);\n\nListCard.propTypes = {\n  cardHeader: PropTypes.string,\n  cardItems: PropTypes.arrayOf(PropTypes.string)\n};\nListCard.defaultProps = {};\nexport default ListCard;","map":{"version":3,"sources":["C:\\Users\\lukes\\Desktop\\FrontendMasters\\Feb-interview-challenge\\src\\components\\list-card\\ListCard.js"],"names":["React","Component","classNames","Card","Base","CardHeader","CardContent","PropTypes","styles","ListCard","props","theme","cardHeader","cardItems","themeObj","class","variant","size","classes","className","root","headerSpace","itemSpace","map","item","listItem","key","propTypes","string","arrayOf","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAI,IAAIC,IAAjB,EAAuBC,UAAvB,EAAmCC,WAAnC,QAAsD,mBAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;IAEMC,Q;;;;;;;;;;;;;6BACK;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,UADR,eACQA,UADR;AAAA,UACoBC,SADpB,eACoBA,SADpB;;AAGP,cAAQF,KAAR;AACE,aAAK,MAAL;AACEG,UAAAA,QAAQ,CAACC,KAAT,GAAiB,KAAjB;AACAD,UAAAA,QAAQ,CAACE,OAAT,GAAmB,YAAnB;AACAF,UAAAA,QAAQ,CAACG,IAAT,GAAgB,OAAhB;AACA;;AACF,aAAK,IAAL;AACEH,UAAAA,QAAQ,CAACC,KAAT,GAAiB,OAAjB;AACAD,UAAAA,QAAQ,CAACE,OAAT,GAAmB,QAAnB;AACAF,UAAAA,QAAQ,CAACG,IAAT,GAAgB,QAAhB;AACA;;AACF,aAAK,OAAL;AACEH,UAAAA,QAAQ,CAACC,KAAT,GAAiB,QAAjB;AACAD,UAAAA,QAAQ,CAACE,OAAT,GAAmB,MAAnB;AACAF,UAAAA,QAAQ,CAACG,IAAT,GAAgB,OAAhB;AACA;;AACF;AACEH,UAAAA,QAAQ,CAACC,KAAT,GAAiB,SAAjB;AAjBJ;;AAoBA,UAAMG,OAAO,GAAGhB,UAAU,CAAC,WAAD,EAAciB,SAAd,sBACvBL,QAAQ,CAACC,KADc,EACN,CAACJ,KAAD,CADM,EAA1B;AAIA,aACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE;AAAES,UAAAA,IAAI,EAAEZ,MAAM,CAACG;AAAf,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE;AAAES,UAAAA,IAAI,EAAEZ,MAAM,CAACa;AAAf,SAArB;AAAmD,QAAA,KAAK,EAAET,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE;AAAEQ,UAAAA,IAAI,EAAEZ,MAAM,CAACc;AAAf,SAAtB;AAAkD,QAAA,SAAS,EAAC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,SAAS,CAACU,GAAV,CAAc,UAAAC,IAAI;AAAA,eACjB;AAAI,UAAA,SAAS,EAAEhB,MAAM,CAACiB,QAAtB;AAAgC,UAAA,GAAG,EAAED,IAAI,CAACE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACIF,IADJ,CADiB;AAAA,OAAlB,CADH,CAFF,CADF;AAYD;;;;EAxCoBvB,S;;AA2CvBQ,QAAQ,CAACkB,SAAT,GAAqB;AACnBf,EAAAA,UAAU,EAAEL,SAAS,CAACqB,MADH;AAEnBf,EAAAA,SAAS,EAAEN,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACqB,MAA5B;AAFQ,CAArB;AAKAnB,QAAQ,CAACqB,YAAT,GAAwB,EAAxB;AAEA,eAAerB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { Card as Base, CardHeader, CardContent } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ListCard.module.scss\";\n\nclass ListCard extends Component {\n  render() {\n    const { theme, cardHeader, cardItems } = this.props;\n\n    switch (theme) {\n      case \"stop\":\n        themeObj.class = \"red\";\n        themeObj.variant = \"underlined\";\n        themeObj.size = \"large\";\n        break;\n      case \"go\":\n        themeObj.class = \"green\";\n        themeObj.variant = \"raised\";\n        themeObj.size = \"medium\";\n        break;\n      case \"yield\":\n        themeObj.class = \"yellow\";\n        themeObj.variant = \"flat\";\n        themeObj.size = \"small\";\n        break;\n      default:\n        themeObj.class = \"default\";\n    }\n\n    const classes = classNames(\"ui-button\", className, {\n      [themeObj.class]: [theme]\n    });\n\n    return (\n      <Base classes={{ root: styles.theme }}>\n        <CardHeader classes={{ root: styles.headerSpace }} title={cardHeader} />\n        <CardContent classes={{ root: styles.itemSpace }} component=\"ul\">\n          {cardItems.map(item => (\n            <li className={styles.listItem} key={item.key}>\n              -{item}\n            </li>\n          ))}\n        </CardContent>\n      </Base>\n    );\n  }\n}\n\nListCard.propTypes = {\n  cardHeader: PropTypes.string,\n  cardItems: PropTypes.arrayOf(PropTypes.string)\n};\n\nListCard.defaultProps = {};\n\nexport default ListCard;\n"]},"metadata":{},"sourceType":"module"}