{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\Feb-interview-challenge\\\\src\\\\components\\\\list-card\\\\ListCard.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { Card as Base, CardHeader, CardContent } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ListCard.module.scss\";\n\nfunction ListCard(_ref) {\n  var theme = _ref.theme,\n      cardHeader = _ref.cardHeader,\n      cardItems = _ref.cardItems;\n\n  var themeCheck = function themeCheck(style) {\n    return classNames(style, _defineProperty({}, styles.dark, theme === \"dark\"));\n  };\n\n  return React.createElement(Base, {\n    classes: {\n      root: themeCheck(styles.listCard)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: cardHeader,\n    classes: {\n      root: themeCheck(styles.headerSpace),\n      title: themeCheck(styles.headerTitle)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    classes: {\n      root: themeCheck(styles.itemSpace)\n    },\n    component: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, cardItems.map(function (item) {\n    return React.createElement(\"li\", {\n      className: styles.listItem,\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"- \", item);\n  })));\n}\n\nListCard.propTypes = {\n  cardHeader: PropTypes.string,\n  cardItems: PropTypes.arrayOf(PropTypes.string)\n};\nexport default ListCard;","map":{"version":3,"sources":["C:\\Users\\lukes\\Desktop\\FrontendMasters\\Feb-interview-challenge\\src\\components\\list-card\\ListCard.js"],"names":["React","classNames","Card","Base","CardHeader","CardContent","PropTypes","styles","ListCard","theme","cardHeader","cardItems","themeCheck","style","dark","root","listCard","headerSpace","title","headerTitle","itemSpace","map","item","listItem","key","propTypes","string","arrayOf"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAI,IAAIC,IAAjB,EAAuBC,UAAvB,EAAmCC,WAAnC,QAAsD,mBAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,SAASC,QAAT,OAAoD;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,MAAzBC,UAAyB,QAAzBA,UAAyB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAClD,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,WACtBZ,UAAU,CAACY,KAAD,sBAAWN,MAAM,CAACO,IAAlB,EAAyBL,KAAK,KAAK,MAAnC,EADY;AAAA,GAAxB;;AAGA,SACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAE;AACPM,MAAAA,IAAI,EAAEH,UAAU,CAACL,MAAM,CAACS,QAAR;AADT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEN,UADT;AAEE,IAAA,OAAO,EAAE;AACPK,MAAAA,IAAI,EAAEH,UAAU,CAACL,MAAM,CAACU,WAAR,CADT;AAEPC,MAAAA,KAAK,EAAEN,UAAU,CAACL,MAAM,CAACY,WAAR;AAFV,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAE;AACPJ,MAAAA,IAAI,EAAEH,UAAU,CAACL,MAAM,CAACa,SAAR;AADT,KADX;AAIE,IAAA,SAAS,EAAC,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGT,SAAS,CAACU,GAAV,CAAc,UAAAC,IAAI;AAAA,WACjB;AAAI,MAAA,SAAS,EAAEf,MAAM,CAACgB,QAAtB;AAAgC,MAAA,GAAG,EAAED,IAAI,CAACE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKF,IADL,CADiB;AAAA,GAAlB,CANH,CAZF,CADF;AA2BD;;AAEDd,QAAQ,CAACiB,SAAT,GAAqB;AACnBf,EAAAA,UAAU,EAAEJ,SAAS,CAACoB,MADH;AAEnBf,EAAAA,SAAS,EAAEL,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACoB,MAA5B;AAFQ,CAArB;AAKA,eAAelB,QAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { Card as Base, CardHeader, CardContent } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ListCard.module.scss\";\n\nfunction ListCard({ theme, cardHeader, cardItems }) {\n  const themeCheck = style =>\n    classNames(style, { [styles.dark]: theme === \"dark\" });\n\n  return (\n    <Base\n      classes={{\n        root: themeCheck(styles.listCard)\n      }}\n    >\n      <CardHeader\n        title={cardHeader}\n        classes={{\n          root: themeCheck(styles.headerSpace),\n          title: themeCheck(styles.headerTitle)\n        }}\n      />\n      <CardContent\n        classes={{\n          root: themeCheck(styles.itemSpace)\n        }}\n        component=\"ul\"\n      >\n        {cardItems.map(item => (\n          <li className={styles.listItem} key={item.key}>\n            - {item}\n          </li>\n        ))}\n      </CardContent>\n    </Base>\n  );\n}\n\nListCard.propTypes = {\n  cardHeader: PropTypes.string,\n  cardItems: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default ListCard;\n"]},"metadata":{},"sourceType":"module"}